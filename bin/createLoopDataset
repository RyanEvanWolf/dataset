#!/usr/bin/env python

from bumblebee.stereo import *
from bumblebee.utils import createDir
from bumblebee.srv import imageRectification,imageRectificationRequest,imageRectificationResponse
from bumblebee.drawing import *
import argparse
import rospy
import copy
import os
import copy
import cv2
import pickle
from cv_bridge import CvBridge
parser =argparse.ArgumentParser()
parser.add_argument("rootDatasetImages",
                    help="Directory to the extracted bayer encoded stereo images",
                    type=str)
parser.add_argument("--CalibrationID",help="The calibration ID used to generate the sequence, typicall A,B, or C",default="A")
args,unknown=parser.parse_known_args()

rospy.init_node("loop_dataset_create")
bumblebee=stereoCamera()

cvb=CvBridge()


print(args.CalibrationID)
rootDir="/home/ryan/DATA_"+args.rootDatasetImages[args.rootDatasetImages.rfind("/")+1:]+"_cal"+args.CalibrationID
createDir(rootDir)
createDir(rootDir+"/left/debayer")
createDir(rootDir+"/left/rectified")
createDir(rootDir+"/right/debayer")
createDir(rootDir+"/right/rectified")
#######################
######get all image names

imageFiles=sorted(os.listdir(args.rootDatasetImages))

timingResults={}
timingResults["Debayer"]=[]
timingResults["Rectification"]=[]
timingResults["intRectification"]=[]

jetsonResults=copy.deepcopy(timingResults)


serviceName="/bumblebee_rectification_node/singleImageRectification"
print("waiting for Service : "+serviceName)
rospy.wait_for_service(serviceName)
serv=rospy.ServiceProxy(serviceName,imageRectification)

for i in range(0,len(imageFiles)):
    newBumblebeeRectification=imageRectificationRequest()
    currentImageFile=args.rootDatasetImages+"/"+imageFiles[i]
    print(currentImageFile)
    fullImage=cv2.imread(currentImageFile,cv2.IMREAD_GRAYSCALE)
    newBumblebeeRectification.fullImage=cvb.cv2_to_imgmsg(fullImage)
    cvb.cv2_to_imgmsg(fullImage)
    result=serv(newBumblebeeRectification)

    ld,rd,lt=bumblebee.debayerImage(fullImage)
    lrect,rRect,lrectT=bumblebee.rectifyImage(ld,rd)
    lrect,rRect,lrectint=bumblebee.rectifyImage(ld,rd,False)
    cv2.imwrite(rootDir+"/left/debayer/"+imageFiles[i],ld)
    cv2.imwrite(rootDir+"/left/rectified/"+imageFiles[i],lrect)
    cv2.imwrite(rootDir+"/right/debayer/"+imageFiles[i],rd)
    cv2.imwrite(rootDir+"/right/rectified/"+imageFiles[i],rRect)
    print(lt,lrectT,lrectint)
    timingResults["Debayer"].append(lt*1000)#convert them all to milliseconds
    timingResults["Rectification"].append(lrectT*1000)
    timingResults["intRectification"].append(lrectint*1000)
    jetsonResults["Debayer"].append(result.debayerTime*1000)
    jetsonResults["Rectification"].append(result.rectificationTime*1000)
    jetsonResults["intRectification"].append(result.intRectificationTime*1000)

f=open(rootDir+"/i7_timing.p","wb")
pickle.dump(timingResults,f)
f.close()
f=open(rootDir+"/jetson_timing.p","wb")
pickle.dump(jetsonResults,f)
f.close()



print("completed")