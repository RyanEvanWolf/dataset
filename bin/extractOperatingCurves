#!/usr/bin/env python
#####ros related imports
import rospy 
import cv2
import time

from dataset.utils import Directories
from front_end.utils import *
from front_end.srv import *
from front_end.msg import frameDetection,ProcTime,kPoint

from front_end.analysis import featureDatabase
#from front_end.features import plotFeatures,getBestSettings,getFeatureSummary

from cv_bridge import CvBridge
import matplotlib.pyplot as plt
import matplotlib.style as sty
import pickle
import argparse
cvb=CvBridge() 

parser =argparse.ArgumentParser()
parser.add_argument("rootDir")
parser.add_argument("loopID")
parser.add_argument("--output_directory",default="/media/ryan/EXTRA/output")
args,unknown=parser.parse_known_args()

projectFolder=Directories(args.rootDir,args.output_directory) 
pickleDir=projectFolder.getFeaturePickle(args.loopID)
print("Loading from "+pickleDir)
features=featureDatabase(pickleDir)
print("completed Loading")
sett,OperatingCurves=features.getOperatingCurves("FAST")
print("complete")


projectFolder=Directories(args.rootDir,args.output_directory) 
pickleDir=projectFolder.getFeaturePickle(args.loopID)
print("Loading from "+pickleDir)
features=featureDatabase(pickleDir)
print("completed Loading")
sett,OperatingCurves=features.getOperatingCurves("FAST")
print("complete")
outputSettings={}
outputSettings["name"]="FAST"
outputSettings["operatingCurves"]=sett

outputFileName=projectFolder.getCurvePickle(args.loopID,args.detector)
print(outputFileName)
pickle.dump(outputSettings,open(outputFileName,"w"))
